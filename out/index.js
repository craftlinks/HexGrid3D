var b={mu_k:4,sigma_k:1,w_k:0.022,mu_g:0.6,sigma_g:0.15,c_rep:1,dt:0.02,point_n:750};async function G(){const O=await(await navigator.gpu?.requestAdapter())?.requestDevice();if(!O){fail("need a browser that supports WebGPU");return}else console.log("WebGPU is supported");var H=document.querySelector("canvas");const j=await fetch("./shaders/lenia_compute.wgsl").then((A)=>A.text()),V=O.createBuffer({label:"Rval buffer",size:b.point_n*4,usage:GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC}),W=O.createBuffer({label:"Uval buffer",size:b.point_n*4,usage:GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC}),X=O.createBuffer({label:"Rgrad buffer",size:b.point_n*2*4,usage:GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC}),Y=O.createBuffer({label:"Ugrad buffer",size:b.point_n*2*4,usage:GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC}),J=O.createBuffer({label:"Position buffer",size:b.point_n*2*4,usage:GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST}),M=O.createBuffer({label:"Position buffer result",size:b.point_n*2*4,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});{const A=new Float32Array(b.point_n*2);for(let E=0;E<b.point_n;++E)A[E]=(Math.random()-0.5)*12,A[E+1]=(Math.random()-0.5)*12;O.queue.writeBuffer(J,0,A)}const K=O.createShaderModule({label:"Lenia Compute Shader",code:j}),L=O.createComputePipeline({label:"compute fields pipeline",layout:"auto",compute:{module:K,entryPoint:"compute_fields"}}),Z=O.createComputePipeline({label:"update positions pipeline",layout:"auto",compute:{module:K,entryPoint:"update_positions"}}),N=O.createBindGroup({layout:L.getBindGroupLayout(0),entries:[{binding:0,resource:{buffer:V}},{binding:1,resource:{buffer:W}},{binding:2,resource:{buffer:X}},{binding:3,resource:{buffer:Y}},{binding:4,resource:{buffer:J}}]});async function $(){const A=O.createCommandEncoder({label:"our command encoder"}),E=A.beginComputePass();E.setPipeline(L),E.setBindGroup(0,N),E.dispatchWorkgroups(b.point_n),E.end();const T=A.beginComputePass();T.setPipeline(Z),T.setBindGroup(0,N),T.dispatchWorkgroups(b.point_n),T.end(),A.copyBufferToBuffer(J,0,M,0,M.size);const k=A.finish();return O.queue.submit([k]),await M.mapAsync(GPUMapMode.READ),new Float32Array(M.getMappedRange())}async function g(A,E=45,T=5){let k=await $();const{width:q,height:Q}=A.canvas;A.resetTransform(),A.clearRect(0,0,q,Q),A.translate(q/2,Q/2);const S=q/E;A.scale(S,S),A.lineWidth=0.1;for(let D=0;D<b.point_n;++D){A.beginPath();const z=k[D*2],C=k[D*2+1];A.arc(z,C,0.1,0,Math.PI*2),A.stroke()}M.unmap()}const y=F();while(!0)await g(y),await new Promise(requestAnimationFrame)}var U=function(I){let O=window.devicePixelRatio||1,H=I.getBoundingClientRect();I.width=H.width*O,I.height=H.height*O;let j=I.getContext("2d");return j.scale(O,O),j},F=function(){return U(document.querySelector("canvas"))};G();
