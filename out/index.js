async function h(){let O=0.001,N={dt:O,n:16000,frictionFactor:Math.pow(0.5,O/0.04),rMax:0.25,m:6,opacity:50};const Q=await navigator.gpu?.requestAdapter(),k=navigator?.gpu.getPreferredCanvasFormat(Q);let q=await Q?.requestDevice();if(!q){fail("need a browser that supports WebGPU");return}else console.log("WebGPU is supported");q.lost.then((y)=>{if(console.error(`WebGPU device was lost: ${y.message}`),q=null,y.reason!=="destroyed")h()});var X=document.querySelector("canvas");const z=await fetch("./shaders/plife_compute.wgsl").then((y)=>y.text()),A=await fetch("./shaders/render.wgsl").then((y)=>y.text());let Y=[];for(let y=0;y<N.m;y++){const W=[];for(let E=0;E<N.m;E++)y==E?W.push(1):y==(E+1)%N.m?W.push(0.1):W.push(0);Y.push(W)}const M=new Float32Array(Y.flat());console.log(M);const S=new Uint32Array(N.n),$=new Float32Array(N.n*4),L=new Float32Array(N.n*3);for(let y=0;y<N.n;y++)S[y]=y%N.m,$[4*y]=Math.random()*2-1,$[4*y+1]=Math.random()*2-1,$[4*y+2]=Math.random()*2-1,$[4*y+3]=1,L[3*y]=0,L[3*y+1]=0,L[3*y+2]=0;const w=q.createBuffer({label:"params buffer",size:Object.keys(N).length*4,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM}),j=q.createBuffer({label:"F buffer",size:N.m*N.m*4,usage:GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_DST}),D=q.createBuffer({label:"colors buffer",size:N.n*4,usage:GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_DST}),F=q.createBuffer({label:"velocities buffer",size:N.n*3*4,usage:GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_DST}),T=q.createBuffer({label:"positions buffer",size:N.n*4*4,usage:GPUBufferUsage.VERTEX|GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_DST|GPUBufferUsage.COPY_SRC}),d=q.createBuffer({label:"Position buffer result",size:N.n*4*4,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});q.queue.writeBuffer(T,0,$),q.queue.writeBuffer(F,0,L),q.queue.writeBuffer(D,0,S),q.queue.writeBuffer(j,0,M);function B(){q.queue.writeBuffer(w,0,new Float32Array(Object.values(N)))}B();const V=q.createBuffer({size:32,usage:GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_DST});q.queue.writeBuffer(V,0,new Float32Array([-1,-1,1,-1,-1,1,1,1]));const Z=new Uint8Array(4*N.n);for(let y=0;y<N.n;y+=1){const W=n(360/N.m*S[y],100,50);Z[y*4]=W[0],Z[y*4+1]=W[1],Z[y*4+2]=W[2],Z[y*4+3]=Math.floor(N.opacity/100*255)}const b=q.createBuffer({size:Z.byteLength,usage:GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_DST});q.queue.writeBuffer(b,0,Z);const g=q.createBuffer({size:16,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST}),C=q.createShaderModule({label:"Particle Life Compute Shader",code:z}),R=q.createShaderModule({label:"render shader",code:A}),U=q.createComputePipeline({label:"compute velocities pipeline",layout:"auto",compute:{module:C,entryPoint:"update_velocities"}}),l=q.createComputePipeline({label:"update positions pipeline",layout:"auto",compute:{module:C,entryPoint:"update_positions"}}),G=q.createRenderPipeline({layout:"auto",vertex:{module:R,entryPoint:"vs",buffers:[{arrayStride:8,attributes:[{shaderLocation:0,format:"float32x2",offset:0}]},{arrayStride:4,stepMode:"instance",attributes:[{shaderLocation:1,format:"unorm8x4",offset:0}]},{arrayStride:16,stepMode:"instance",attributes:[{shaderLocation:2,format:"float32x4",offset:0}]}]},fragment:{module:R,entryPoint:"fs",targets:[{format:k,blend:{color:{srcFactor:"one",dstFactor:"one-minus-src-alpha"},alpha:{srcFactor:"one",dstFactor:"one-minus-src-alpha"}}}]},primitive:{topology:"triangle-strip",stripIndexFormat:"uint32"}}),_=q.createBindGroup({layout:U.getBindGroupLayout(0),entries:[{binding:0,resource:{buffer:D}},{binding:1,resource:{buffer:F}},{binding:2,resource:{buffer:T}},{binding:3,resource:{buffer:j}}]}),P=q.createBindGroup({layout:U.getBindGroupLayout(1),entries:[{binding:0,resource:{buffer:w}}]}),u=q.createBindGroup({layout:G.getBindGroupLayout(0),entries:[{binding:0,resource:{buffer:g}}]}),H=t(),x={colorAttachments:[{view:H.getCurrentTexture().createView(),loadOp:"clear",storeOp:"store",clearValue:[0,0,0,1]}]};function m(y){const W=H.canvas.width/H.canvas.height;q.queue.writeBuffer(g,0,new Float32Array([X.width,X.height,5,W]));const I=y.beginComputePass();I.setPipeline(U),I.setBindGroup(0,_),I.setBindGroup(1,P),I.dispatchWorkgroups(N.n/64),I.end();const J=y.beginComputePass();J.setPipeline(l),J.setBindGroup(0,_),J.setBindGroup(1,P),J.dispatchWorkgroups(N.n/64),J.end(),x.colorAttachments[0].view=H.getCurrentTexture().createView();const K=y.beginRenderPass(x);K.setPipeline(G),K.setVertexBuffer(0,V),K.setVertexBuffer(1,b),K.setVertexBuffer(2,T),K.setBindGroup(0,u),K.draw(4,N.n),K.end()}async function v(y,W=1){const E=q.createCommandEncoder({label:"our command encoder"});for(let J=0;J<W;++J)m(E);const I=E.finish();q.queue.submit([I])}function f(y){let W=window.devicePixelRatio||1,E=y.getBoundingClientRect();y.width=E.width*W,y.height=E.height*W;let I=y.getContext("webgpu");return I.configure({device:q,format:k}),I}function t(){return f(document.querySelector("canvas"))}while(!0)await v(H),await new Promise(requestAnimationFrame)}var n=function(O,N,Q){N/=100,Q/=100;let k=(1-Math.abs(2*Q-1))*N,q=k*(1-Math.abs(O/60%2-1)),X=Q-k/2,z=0,A=0,Y=0;if(0<=O&&O<60)z=k,A=q,Y=0;else if(60<=O&&O<120)z=q,A=k,Y=0;else if(120<=O&&O<180)z=0,A=k,Y=q;else if(180<=O&&O<240)z=0,A=q,Y=k;else if(240<=O&&O<300)z=q,A=0,Y=k;else if(300<=O&&O<360)z=k,A=0,Y=q;return z=Math.round((z+X)*255),A=Math.round((A+X)*255),Y=Math.round((Y+X)*255),[z,A,Y]};h();
